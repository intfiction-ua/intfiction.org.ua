{"version":3,"file":"component---src-templates-article-js-85ec90ac3458f21eab7d.js","mappings":"6LAUA,MANkBA,GAChBC,EAAAA,cAAA,QAAMC,UAAU,0BAA0BC,IAAKH,GAC7CC,EAAAA,cAACG,EAAAA,GAAI,CAACC,GAAI,cAAaC,EAAAA,EAAAA,IAAiBN,OAAWA,ICIvD,MANaA,GACXC,EAAAA,cAAA,QAAMC,UAAU,MAAMC,IAAKH,GACzBC,EAAAA,cAACG,EAAAA,GAAI,CAACC,GAAI,SAAQC,EAAAA,EAAAA,IAAiBN,OAAWA,ICiBlD,MAjBoBO,IAAA,IAAC,KAAEC,EAAI,WAAEC,EAAU,KAAEC,EAAI,OAAEC,EAAM,cAAEC,GAAeL,EAAA,OACpEN,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,cACZU,EAAgB,GAAKX,EAAAA,cAAAA,EAAAA,SAAA,KAAGU,EAAOV,EAAAA,cAAA,aAC/BY,EAAAA,EAAAA,IAAWL,KAGhBP,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,OAAKC,UAAU,mBACZO,EAAWK,IAAIC,GACfL,EAAKI,IAAIE,KAGV,C,oFCdR,MAAMC,EAAkBV,IAAA,IAAC,QAAEW,GAASX,EAAA,OAClCN,EAAAA,cAAA,cAAYC,UAAU,qBACnBgB,EAAQP,OAAO,MAAGV,EAAAA,cAACG,EAAAA,GAAI,CAACC,GAAIa,EAAQC,IAAKC,OAAO,SAASC,IAAI,uBAAuBH,EAAQI,QAAc,IAC3GrB,EAAAA,cAAA,WAAM,aACKiB,EAAQK,WACR,EAiCf,UA9BgBC,IAAe,IAAd,KAAEC,GAAMD,EACvB,MAAME,EAAWD,EAAKE,gBAChB,YAAEC,EAAW,OAAEC,EAAM,QAAEC,GAAYJ,EACzC,OACEzB,EAAAA,cAAC8B,EAAAA,EAAM,KACL9B,EAAAA,cAAA,YACEA,EAAAA,cAAC+B,EAAAA,EAAG,CACFC,MAAOL,EAAYK,MACnBC,YAAaJ,EACbK,KAAMN,EAAOO,OAEfnC,EAAAA,cAAA,OAAKC,UAAU,oCACbD,EAAAA,cAAA,UAAK2B,EAAYK,OACjBhC,EAAAA,cAACoC,EAAAA,EAAW,CACV7B,KAAMoB,EAAYpB,KAClBC,WAAYoB,EAAOpB,WACnBC,KAAMmB,EAAOnB,KACbC,OAAQiB,EAAYjB,OACpBC,gBAAiBgB,EAAYU,cAE9BV,EAAYU,aAAerC,EAAAA,cAACgB,EAAe,CAACC,QAASU,EAAYU,cAClErC,EAAAA,cAAA,WACAA,EAAAA,cAAA,OAAKsC,wBAAyB,CAAEC,OAAQd,EAASe,QACjDxC,EAAAA,cAAA,aAGG,C","sources":["webpack://intfiction.org.ua/./src/components/item-category.js","webpack://intfiction.org.ua/./src/components/item-tag.js","webpack://intfiction.org.ua/./src/components/article-info.js","webpack://intfiction.org.ua/./src/templates/article.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { convert2translit } from '../utils';\n\nconst Category = (name) => (\n  <span className=\"tag is-primary is-light\" key={name}>\n    <Link to={`/category/${convert2translit(name)}/`}>{name}</Link>\n  </span>\n);\n\nexport default Category;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { convert2translit } from '../utils';\n\nconst Tag = (name) => (\n  <span className=\"tag\" key={name}>\n    <Link to={`/tag/${convert2translit(name)}/`}>{name}</Link>\n  </span>\n);\n\nexport default Tag;\n","import React from 'react';\nimport { formatDate } from '../utils';\n\nimport Category from './item-category';\nimport Tag from './item-tag';\n\nconst ArticleInfo = ({ date, categories, tags, author, isTranslation }) => (\n  <div className=\"level is-family-primary\">\n    <div className=\"level-left\">\n      <div className=\"level-item\">\n        {isTranslation ? '' : <>{author}<br /></>}\n        {formatDate(date)}\n      </div>\n    </div>\n    <div className=\"level-right\">\n      <div className=\"level-item tags\">\n        {categories.map(Category)}\n        {tags.map(Tag)}\n      </div>\n    </div>\n  </div>\n);\n\nexport default ArticleInfo;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../layout';\nimport SEO from '../components/seo';\nimport ArticleInfo from '../components/article-info';\n\nconst TranslationInfo = ({ content }) => (\n  <blockquote className=\"is-family-primary\">\n    {content.author}, “<Link to={content.url} target=\"_blank\" rel=\"noopener noreferrer\">{content.source}</Link>”\n    <br />\n    Переклад: {content.translator}\n  </blockquote>\n);\n\nconst Article = ({ data }) => {\n  const postNode = data.markdownRemark;\n  const { frontmatter, fields, excerpt } = postNode;\n  return (\n    <Layout>\n      <main>\n        <SEO\n          title={frontmatter.title}\n          description={excerpt}\n          path={fields.slug}\n        />\n        <div className=\"content is-family-secondary mx-4\">\n          <h1>{frontmatter.title}</h1>\n          <ArticleInfo\n            date={frontmatter.date}\n            categories={fields.categories}\n            tags={fields.tags}\n            author={frontmatter.author}\n            isTranslation={!!frontmatter.translation}\n          />\n          {frontmatter.translation && <TranslationInfo content={frontmatter.translation} />}\n          <hr />\n          <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n          <hr />\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default Article;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query ArticleBySlug($slug: String!) {\n    markdownRemark(fields: { nodeType: { eq: \"article\" }, slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date\n        author\n        translation {\n          author\n          source\n          url\n          translator\n        }\n      }\n      fields {\n        slug\n        tags\n        categories\n      }\n    }\n  }\n`;\n"],"names":["name","React","className","key","Link","to","convert2translit","_ref","date","categories","tags","author","isTranslation","formatDate","map","Category","Tag","TranslationInfo","content","url","target","rel","source","translator","_ref2","data","postNode","markdownRemark","frontmatter","fields","excerpt","Layout","SEO","title","description","path","slug","ArticleInfo","translation","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}